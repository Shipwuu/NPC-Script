-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local COREGUI = game:GetService("CoreGui")
local LocalPlayer = Players.LocalPlayer

-- Variables
local ESPenabled = true
local HitboxEnabled = false
local ESPFullBodyEnabled = false

-- Utility Functions
local function getRoot(char)
    return char:FindFirstChild("HumanoidRootPart") or char:FindFirstChild("Torso") or char:FindFirstChild("UpperTorso")
end

-- Check if the model has a "TradeProximityPrompt," indicating a real player (not an NPC)
local function isRealPlayer(model)
    return model:FindFirstChild("HumanoidRootPart") and model.HumanoidRootPart:FindFirstChild("TradeProximityPrompt") ~= nil
end

-- Old sheriff detection based on "GunSource"
local function isSheriffOld(model)
    return model:FindFirstChild("GunSource") ~= nil
end

-- New sheriff detection logic based on "ItemOnBody" in the player's workspace path
local function isSheriffNew(model)
    local playerName = model.Name
    local playerWorkspaceItem = workspace:FindFirstChild(playerName) and workspace[playerName]:FindFirstChild("ItemOnBody")
    return playerWorkspaceItem ~= nil
end

-- ESP and Hitbox logic for real players and sheriffs only (NPCs excluded)
local function ESPandHitbox(model)
    task.spawn(function()
        local playerName = model.Name

        -- Only apply ESP and Hitbox if it's a real player or sheriff
        if isRealPlayer(model) or isSheriffOld(model) or isSheriffNew(model) then
            -- Check if ESP already exists and clean up if it does
            local existingESP = COREGUI:FindFirstChild(playerName .. '_ESP')
            if existingESP then
                existingESP:Destroy()
            end

            local ESPholder = Instance.new("Folder")
            ESPholder.Name = playerName .. '_ESP'
            ESPholder.Parent = COREGUI

            local humanoidRootPart = getRoot(model)
            if humanoidRootPart and model:FindFirstChildOfClass("Humanoid") then
                -- ESP Full Body Highlight
                if ESPFullBodyEnabled then
                    local BillboardGui = Instance.new("BillboardGui")
                    BillboardGui.Adornee = humanoidRootPart
                    BillboardGui.Name = playerName
                    BillboardGui.Parent = ESPholder
                    BillboardGui.Size = UDim2.new(0, 150, 0, 50)
                    BillboardGui.StudsOffset = Vector3.new(0, 1.5, 0)
                    BillboardGui.AlwaysOnTop = true

                    local TextLabel = Instance.new("TextLabel")
                    TextLabel.Parent = BillboardGui
                    TextLabel.BackgroundTransparency = 1
                    TextLabel.Position = UDim2.new(0, 0, 0, 0)
                    TextLabel.Size = UDim2.new(0, 150, 0, 25)
                    TextLabel.Font = Enum.Font.GothamBold
                    TextLabel.TextSize = 18

                    -- Detect and apply correct color based on Sheriff or Player status
                    if isSheriffNew(model) then
                        TextLabel.TextColor3 = Color3.fromRGB(0, 0, 255) -- Blue for Sheriffs (new logic)
                    elseif isSheriffOld(model) then
                        TextLabel.TextColor3 = Color3.fromRGB(0, 255, 0) -- Green for Sheriffs (old logic)
                    elseif isRealPlayer(model) then
                        TextLabel.TextColor3 = Color3.new(1, 0, 0) -- Red for real players (non-NPC)
                    end

                    TextLabel.TextStrokeTransparency = 0.5
                    TextLabel.TextStrokeColor3 = Color3.fromRGB(209, 216, 197)  -- Black outline
                    TextLabel.TextYAlignment = Enum.TextYAlignment.Top
                    TextLabel.Text = playerName

                    -- Update position and distance dynamically
                    local espLoopFunc
                    local function espLoop()
                        if COREGUI:FindFirstChild(playerName .. '_ESP') then
                            if model and getRoot(model) then
                                local pos = math.floor((getRoot(LocalPlayer.Character).Position - getRoot(model).Position).magnitude)
                                TextLabel.Text = playerName .. " (" .. pos .. " studs)"
                            end
                        else
                            espLoopFunc:Disconnect()
                        end
                    end
                    espLoopFunc = RunService.RenderStepped:Connect(espLoop)
                end

                -- Hitbox Expansion
                if HitboxEnabled then
                    -- Update Hitbox for real players or Sheriffs
                    pcall(function()
                        humanoidRootPart.Size = Vector3.new(15, 15, 15) -- Larger hitbox size for easy targeting
                        humanoidRootPart.Transparency = 0.9
                        humanoidRootPart.Material = "Neon"
                        humanoidRootPart.CanCollide = false

                        -- Apply color logic to the hitbox based on Sheriff or Player status
                        if isSheriffNew(model) then
                            humanoidRootPart.BrickColor = BrickColor.new("Bright blue") -- Blue for Sheriffs (new logic)
                        elseif isSheriffOld(model) then
                            humanoidRootPart.BrickColor = BrickColor.new("Bright green") -- Green for Sheriffs (old logic)
                        elseif isRealPlayer(model) then
                            humanoidRootPart.BrickColor = BrickColor.new("Bright red") -- Red for real players (non-NPC)
                        end
                    end)
                else
                    -- Reset Hitbox to default
                    pcall(function()
                        humanoidRootPart.Size = Vector3.new(2, 2, 1) -- Reset to default size
                        humanoidRootPart.Transparency = 1
                        humanoidRootPart.BrickColor = BrickColor.new("Medium stone grey") -- Default color for neutral state
                        humanoidRootPart.Material = "Plastic"
                        humanoidRootPart.CanCollide = true
                    end)
                end
            end
        end
    end)
end

-- Function to update ESP and Hitbox dynamically by looping through workspace
local function updateESPandHitbox()
    for _, obj in pairs(workspace:GetChildren()) do
        if obj:FindFirstChild("HumanoidRootPart") and (isRealPlayer(obj) or isSheriffOld(obj) or isSheriffNew(obj)) then
            ESPandHitbox(obj)
        end
    end
end

-- Run a loop every 0.5 seconds to detect changes in players' status and update ESP and Hitbox
local function startAutoUpdating()
    while ESPenabled or HitboxEnabled do
        updateESPandHitbox()
        wait(0.5) -- Updates every half second (adjust as needed)
    end
end

-- UI elements to control the ESP and Hitbox toggles
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "HitboxAndESPGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

-- ESP Button with custom design
local ESPButton = Instance.new("TextButton")
ESPButton.Size = UDim2.new(0, 90, 0, 40)
ESPButton.Position = UDim2.new(1, -350, 0, 10)
ESPButton.TextSize = 18
ESPButton.Font = Enum.Font.GothamBold
ESPButton.TextColor3 = Color3.fromRGB(255, 255, 255)  -- White text
ESPButton.Parent = screenGui

-- Add UICorner for rounded corners
local ESPButtonCorner = Instance.new("UICorner")
ESPButtonCorner.CornerRadius = UDim.new(0, 5)
ESPButtonCorner.Parent = ESPButton

-- Add thin white UIStroke for the button frame
local ESPButtonStroke = Instance.new("UIStroke")
ESPButtonStroke.Color = Color3.fromRGB(255, 255, 255)
ESPButtonStroke.Thickness = 1
ESPButtonStroke.Parent = ESPButton

-- Add UIGradient to UIStroke for a gradient effect
local ESPButtonGradient = Instance.new("UIGradient")
ESPButtonGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(150, 150, 150))
}
ESPButtonGradient.Parent = ESPButtonStroke

-- Add a semi-transparent to non-transparent UIGradient for the button frame
local ESPFrameGradient = Instance.new("UIGradient")
ESPFrameGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(152, 238, 204)),  -- Non-transparent white at the top
    ColorSequenceKeypoint.new(1, Color3.fromRGB(121, 224, 238))  -- Semi-transparent black at the bottom
}
ESPFrameGradient.Rotation = 90  -- Horizontal gradient
ESPFrameGradient.Parent = ESPButton

-- Hitbox Button with custom design
local HitboxButton = Instance.new("TextButton")
HitboxButton.Size = UDim2.new(0, 90, 0, 40)
HitboxButton.Position = UDim2.new(1, -350, 0, 60) -- Below ESP button
HitboxButton.TextSize = 18
HitboxButton.Font = Enum.Font.GothamBold
HitboxButton.TextColor3 = Color3.fromRGB(255, 255, 255)  -- White text
HitboxButton.Parent = screenGui

-- Add UICorner for rounded corners
local HitboxButtonCorner = Instance.new("UICorner")
HitboxButtonCorner.CornerRadius = UDim.new(0, 5)
HitboxButtonCorner.Parent = HitboxButton

-- Add thin white UIStroke for the button frame
local HitboxButtonStroke = Instance.new("UIStroke")
HitboxButtonStroke.Color = Color3.fromRGB(255, 255, 255)
HitboxButtonStroke.Thickness = 1
HitboxButtonStroke.Parent = HitboxButton

-- Add UIGradient to UIStroke for a gradient effect
local HitboxButtonGradient = Instance.new("UIGradient")
HitboxButtonGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(150, 150, 150))
}
HitboxButtonGradient.Parent = HitboxButtonStroke

-- Add a semi-transparent to non-transparent UIGradient for the button frame
local HitboxFrameGradient = Instance.new("UIGradient")
HitboxFrameGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(152, 238, 204)),  -- Non-transparent white at the top
    ColorSequenceKeypoint.new(1, Color3.fromRGB(121, 224, 238))  -- Semi-transparent black at the bottom
}
HitboxFrameGradient.Rotation = 90  -- Horizontal gradient
HitboxFrameGradient.Parent = HitboxButton

-- Function to update button appearance based on ESP state
local function updateESPButton()
    if ESPFullBodyEnabled then
        ESPButton.Text = "ESP ON"
        ESPButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)  -- Green background
        ESPButton.BackgroundTransparency = 0.9  -- Semi-transparent background
    else
        ESPButton.Text = "ESP OFF"
        ESPButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)  -- Black background
        ESPButton.BackgroundTransparency = 0.9  -- Semi-transparent background
    end
end

-- Function to update button appearance based on Hitbox state
local function updateHitboxButton()
    if HitboxEnabled then
        HitboxButton.Text = "Hitbox ON"
        HitboxButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)  -- Green background
        HitboxButton.BackgroundTransparency = 0.9  -- Semi-transparent background
    else
        HitboxButton.Text = "Hitbox OFF"
        HitboxButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)  -- Black background
        HitboxButton.BackgroundTransparency = 0.9  -- Semi-transparent background
    end
end

-- Toggle ESP Full Body Functionality
ESPButton.MouseButton1Click:Connect(function()
    ESPFullBodyEnabled = not ESPFullBodyEnabled
    updateESPButton()
end)

-- Toggle Hitbox Functionality
HitboxButton.MouseButton1Click:Connect(function()
    HitboxEnabled = not HitboxEnabled
    updateHitboxButton()
end)

-- Initial button state
updateESPButton()
updateHitboxButton()

-- Start auto-updating ESP and Hitbox when script is executed
startAutoUpdating()

print("ESP and Hitbox script with custom buttons initialized.")
