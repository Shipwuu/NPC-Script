-- Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- Player and GUI setup
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Function to create the toggle button
local function createToggleButton()
    -- Create a ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "SpeedToggleGui"
    screenGui.Parent = playerGui
    screenGui.ResetOnSpawn = false

    -- Create the Toggle Button
    local toggleButton = Instance.new("TextButton")
    toggleButton.Name = "SpeedToggleButton"
    toggleButton.Size = UDim2.new(0, 80, 0, 80) -- 80x80 pixels size (larger button)
    toggleButton.Position = UDim2.new(0.9, 0, 0.5, -40) -- Middle right position
    toggleButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Black background color
    toggleButton.BackgroundTransparency = 1 -- High transparency
    toggleButton.BorderSizePixel = 0
    toggleButton.Text = "âš«" -- Default text when off
    toggleButton.TextTransparency = 0.5 -- 50% transparent text
    toggleButton.Font = Enum.Font.SourceSansBold
    toggleButton.TextScaled = true
    toggleButton.Parent = screenGui

    -- Make the button circular
    local uICorner = Instance.new("UICorner")
    uICorner.CornerRadius = UDim.new(1, 0) -- Fully rounded to make a circle
    uICorner.Parent = toggleButton

    return toggleButton
end

-- Create the toggle button
local toggleButton = createToggleButton()

-- Toggle state management
local toggleOn = false

-- Function to change player speed
local function setPlayerSpeed(speed)
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid.WalkSpeed = speed
    end
end

-- Button click event
toggleButton.MouseButton1Click:Connect(function()
    toggleOn = not toggleOn -- Toggle state

    if toggleOn then
        toggleButton.BackgroundColor3 = Color3.fromRGB(255, 255, 0) -- Yellow color when on
        toggleButton.Text = "ðŸŸ¡" -- Text when on
    else
        toggleButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Black color when off
        toggleButton.Text = "âš«" -- Text when off
    end
end)

-- Continuously loop to set player speed based on toggle state every 0.01 seconds
RunService.Heartbeat:Connect(function(deltaTime)
    if deltaTime >= 0.01 then
        if toggleOn then
            setPlayerSpeed(17) -- Set speed to 16.5 when on
        else
            setPlayerSpeed(7.8) -- Set speed to 7.8 when off
        end
    end
end)

-- Make the button draggable on all devices
local dragging = false
local dragInput, mousePos, framePos

local function updateInput(input)
    local delta = input.Position - mousePos
    toggleButton.Position = UDim2.new(
        framePos.X.Scale,
        framePos.X.Offset + delta.X,
        framePos.Y.Scale,
        framePos.Y.Offset + delta.Y
    )
end

toggleButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        mousePos = input.Position
        framePos = toggleButton.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

toggleButton.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and input == dragInput then
        updateInput(input)
    end
end)

-- ------------------------------------------- Next Button ---------------------------------------------

-- Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- Player and GUI setup
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Function to create the toggle button
local function createToggleButton()
    -- Create a ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "SpeedToggleGui"
    screenGui.Parent = playerGui
    screenGui.ResetOnSpawn = false

    -- Create the Toggle Button
    local toggleButton = Instance.new("TextButton")
    toggleButton.Name = "SpeedToggleButton"
    toggleButton.Size = UDim2.new(0, 80, 0, 80) -- 80x80 pixels size (larger button)
    toggleButton.Position = UDim2.new(0.9, 0, 0.5, -40) -- Middle right position
    toggleButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Black background color
    toggleButton.BackgroundTransparency = 1 -- High transparency
    toggleButton.BorderSizePixel = 0
    toggleButton.Text = "âš«" -- Default text when off
    toggleButton.TextTransparency = 0.5 -- 50% transparent text
    toggleButton.Font = Enum.Font.SourceSansBold
    toggleButton.TextScaled = true
    toggleButton.Parent = screenGui

    -- Make the button circular
    local uICorner = Instance.new("UICorner")
    uICorner.CornerRadius = UDim.new(1, 0) -- Fully rounded to make a circle
    uICorner.Parent = toggleButton

    return toggleButton
end

-- Create the toggle button
local toggleButton = createToggleButton()

-- Toggle state management
local toggleOn = false

-- Function to change player speed
local function setPlayerSpeed(speed)
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if humanoid then
        humanoid.WalkSpeed = speed
    end
end

-- Button click event
toggleButton.MouseButton1Click:Connect(function()
    toggleOn = not toggleOn -- Toggle state

    if toggleOn then
        toggleButton.BackgroundColor3 = Color3.fromRGB(255, 255, 0) -- Yellow color when on
        toggleButton.Text = "ðŸŸ¡" -- Text when on
    else
        toggleButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Black color when off
        toggleButton.Text = "âš«" -- Text when off
    end
end)

-- Continuously loop to set player speed based on toggle state every 0.01 seconds
RunService.Heartbeat:Connect(function(deltaTime)
    if deltaTime >= 0.01 then
        if toggleOn then
            setPlayerSpeed(21) -- Set speed to 16.5 when on
        else
            setPlayerSpeed(11) -- Set speed to 7.8 when off
        end
    end
end)

-- Make the button draggable on all devices
local dragging = false
local dragInput, mousePos, framePos

local function updateInput(input)
    local delta = input.Position - mousePos
    toggleButton.Position = UDim2.new(
        framePos.X.Scale,
        framePos.X.Offset + delta.X,
        framePos.Y.Scale,
        framePos.Y.Offset + delta.Y
    )
end

toggleButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        mousePos = input.Position
        framePos = toggleButton.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

toggleButton.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and input == dragInput then
        updateInput(input)
    end
end)
