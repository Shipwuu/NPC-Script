-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local COREGUI = game:GetService("CoreGui")
local LocalPlayer = Players.LocalPlayer

-- Variables
local ESPenabled = false
local friends = {}

-- Fetch friends list
local function updateFriendsList()
    friends = {}
    local success, result = pcall(function()
        return Players:GetFriendsAsync(LocalPlayer.UserId)
    end)
    if success then
        for _, friend in pairs(result:GetCurrentPage()) do
            friends[friend.Username] = true
        end
    else
        warn("Failed to fetch friends list:", result)
    end
end

updateFriendsList()

-- Utility Functions
local function getRoot(char)
    return char:FindFirstChild("HumanoidRootPart") or char:FindFirstChild("Torso") or char:FindFirstChild("UpperTorso")
end

local function isSheriff(model)
    return model:FindFirstChild("GunSource") ~= nil
end

local function ESP(model)
    task.spawn(function()
        local playerName = model.Name
        
        -- Check if ESP already exists and clean up if it does
        for i, v in pairs(COREGUI:GetChildren()) do
            if v.Name == playerName .. '_ESP' then
                v:Destroy()
            end
        end
        wait()

        -- Detect real players using the TradeProximityPrompt
        if model:FindFirstChild("HumanoidRootPart") and model.HumanoidRootPart:FindFirstChild("TradeProximityPrompt") then
            local ESPholder = Instance.new("Folder")
            ESPholder.Name = playerName .. '_ESP'
            ESPholder.Parent = COREGUI

            local humanoidRootPart = getRoot(model)
            if humanoidRootPart and model:FindFirstChildOfClass("Humanoid") then
                local BillboardGui = Instance.new("BillboardGui")
                BillboardGui.Adornee = humanoidRootPart
                BillboardGui.Name = playerName
                BillboardGui.Parent = ESPholder
                BillboardGui.Size = UDim2.new(0, 150, 0, 50)
                BillboardGui.StudsOffset = Vector3.new(0, 1.5, 0)
                BillboardGui.AlwaysOnTop = true

                local TextLabel = Instance.new("TextLabel")
                TextLabel.Parent = BillboardGui
                TextLabel.BackgroundTransparency = 1
                TextLabel.Position = UDim2.new(0, 0, 0, 0)
                TextLabel.Size = UDim2.new(0, 150, 0, 25)
                TextLabel.Font = Enum.Font.GothamBold
                TextLabel.TextSize = 18

                -- Correct Sheriff Detection: Red for Sheriff, Blue for others
                TextLabel.TextColor3 = isSheriff(model) and Color3.new(1, 0, 0) or Color3.fromRGB(97, 94, 252)
                TextLabel.TextStrokeTransparency = 0.5
                TextLabel.TextStrokeColor3 = Color3.fromRGB(209, 216, 197)  -- Black outline
                TextLabel.TextYAlignment = Enum.TextYAlignment.Top
                TextLabel.Text = playerName

                local espLoopFunc
                local function espLoop()
                    if COREGUI:FindFirstChild(playerName .. '_ESP') then
                        if model and getRoot(model) then
                            local pos = math.floor((getRoot(LocalPlayer.Character).Position - getRoot(model).Position).magnitude)
                            TextLabel.Text = playerName .. " (" .. pos .. " studs)"
                        end
                    else
                        espLoopFunc:Disconnect()
                    end
                end
                espLoopFunc = RunService.RenderStepped:Connect(espLoop)
            end
        end
    end)
end

-- Function to update ESP dynamically by looping through workspace
local function updateESP()
    for _, obj in pairs(workspace:GetChildren()) do
        if obj:FindFirstChild("HumanoidRootPart") and obj.HumanoidRootPart:FindFirstChild("TradeProximityPrompt") then
            if not COREGUI:FindFirstChild(obj.Name .. '_ESP') then
                ESP(obj)
            end
        end
    end
end

-- Run a continuous loop to detect players dynamically
RunService.RenderStepped:Connect(function()
    if ESPenabled then
        updateESP()
    end
end)

-- UI elements to control the ESP toggle
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ESPToggleGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0, 90, 0, 40)
toggleButton.Position = UDim2.new(1, -350, 0, 10)
toggleButton.TextSize = 18
toggleButton.Font = Enum.Font.GothamBold
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)  -- White text
toggleButton.Parent = screenGui

-- Add UICorner for rounded corners
local toggleButtonCorner = Instance.new("UICorner")
toggleButtonCorner.CornerRadius = UDim.new(0, 5)
toggleButtonCorner.Parent = toggleButton

-- Add thin white UIStroke for the button frame
local toggleButtonStroke = Instance.new("UIStroke")
toggleButtonStroke.Color = Color3.fromRGB(255, 255, 255)
toggleButtonStroke.Thickness = 1
toggleButtonStroke.Parent = toggleButton

-- Add UIGradient to UIStroke for a gradient effect
local toggleButtonGradient = Instance.new("UIGradient")
toggleButtonGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(150, 150, 150))
}
toggleButtonGradient.Parent = toggleButtonStroke

-- Add a semi-transparent to non-transparent UIGradient for the button frame
local frameGradient = Instance.new("UIGradient")
frameGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(152, 238, 204)),  -- Non-transparent white at the top
    ColorSequenceKeypoint.new(1, Color3.fromRGB(121, 224, 238))  -- Semi-transparent black at the bottom
}
frameGradient.Rotation = 90  -- Horizontal gradient
frameGradient.Parent = toggleButton

-- Function to update button appearance based on ESP state
local function updateButton()
    if ESPenabled then
        toggleButton.Text = "ESP ON"
        toggleButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)  -- Green background
        toggleButton.BackgroundTransparency = 0.9  -- Semi-transparent background
    else
        toggleButton.Text = "ESP OFF"
        toggleButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)  -- Black background
        toggleButton.BackgroundTransparency = 0.9  -- Semi-transparent background
    end
end

-- Initial button state
updateButton()

toggleButton.MouseButton1Click:Connect(function()
    ESPenabled = not ESPenabled
    updateButton()
    if not ESPenabled then
        for i, v in pairs(COREGUI:GetChildren()) do
            if v.Name:find('_ESP') then
                v:Destroy()
            end
        end
    end
end)

-- Ensure players list is updated when new players join or leave
Players.PlayerAdded:Connect(function()
    updateESP()
end)

Players.PlayerRemoving:Connect(function()
    updateESP()
end)

print("ESP script initialized.")
